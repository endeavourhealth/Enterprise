<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:element name="queryDocument" type="queryDocument"/>
	<xs:element name="libraryItem" type="libraryItem"/>
	<xs:element name="report" type="report"/>
	<xs:complexType name="queryDocument">
		<xs:sequence>
			<xs:element name="folder" type="folder" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="libraryItem" type="libraryItem" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="report" type="report" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="folder">
		<xs:sequence>
			<xs:element name="uuid" type="xs:string"/>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="parentUuid" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="libraryItem">
		<xs:sequence>
			<xs:element name="uuid" type="xs:string"/>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="folderUuid" type="xs:string"/>
			<xs:choice>
				<xs:element name="query" type="query"/>
				<xs:element name="dataSource" type="dataSource"/>
				<xs:element name="test" type="test"/>
				<xs:element name="codeSet" type="codeSet"/>
				<xs:element name="listReport" type="listReport"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="query">
		<xs:sequence>
			<xs:element name="parentQueryUuid" type="xs:string" minOccurs="0"/>
			<xs:element name="startingRules">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ruleId" type="xs:int" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="rule" type="rule" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="rule">
		<xs:sequence>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="id" type="xs:int"/>
			<xs:choice>
				<xs:element name="test" type="test"/>
				<xs:element name="testLibraryItemUUID" type="xs:string"/>
				<xs:element name="queryLibraryItemUUID" type="xs:string"/>
				<xs:element name="expression" type="expressionType"/>
			</xs:choice>
			<xs:element name="onPass" type="ruleAction"/>
			<xs:element name="onFail" type="ruleAction"/>
			<xs:element name="layout" type="layoutType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ruleAction">
		<xs:sequence>
			<xs:element name="action" type="ruleActionOperator"/>
			<xs:element name="ruleId" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ruleActionOperator">
		<xs:restriction base="xs:string">
			<xs:enumeration value="include"/>
			<xs:enumeration value="exclude"/>
			<xs:enumeration value="gotoRules"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="report">
		<xs:sequence>
			<xs:element name="uuid" type="xs:string"/>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="folderUuid" type="xs:string"/>
			<xs:element name="reportItem" type="reportItem"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="reportItem">
		<xs:sequence>
			<xs:choice>
				<xs:element name="queryLibraryItemUuid"/>
				<xs:element name="listReportLibraryItemUuid"/>
			</xs:choice>
			<xs:element name="parentUuid" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fieldTest">
		<xs:sequence>
			<xs:element name="field" type="xs:string"/>
			<xs:choice>
				<xs:element name="valueFrom" type="valueFrom"/>
				<xs:element name="valueTo" type="valueTo"/>
				<xs:element name="valueRange" type="valueRange"/>
				<xs:element name="valueEqualTo" type="value"/>
				<xs:element name="codeSet" type="codeSet" maxOccurs="unbounded"/>
				<xs:element name="codeSetLibraryItemUuid" type="xs:string" maxOccurs="unbounded"/>
			</xs:choice>
			<xs:element name="negate" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="value">
		<xs:sequence>
			<xs:choice>
				<xs:element name="constant" type="xs:string"/>
				<xs:element name="parameter" type="parameterType"/>
			</xs:choice>
			<xs:choice>
				<xs:element name="absoluteUnit" type="valueAbsoluteUnit"/>
				<xs:element name="relativeUnit" type="valueRelativeUnit"/>
			</xs:choice>
			<!--			<xs:element name="relation" type="" minOccurs="0"/>-->
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="valueAbsoluteUnit">
		<xs:restriction base="xs:string">
			<xs:enumeration value="numeric"/>
			<xs:enumeration value="date"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="valueRelativeUnit">
		<xs:restriction base="xs:string">
			<xs:enumeration value="month"/>
			<xs:enumeration value="year"/>
			<xs:enumeration value="week"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="valueFrom">
		<xs:complexContent>
			<xs:extension base="value">
				<xs:sequence>
					<xs:element name="operator" type="valueFromOperator"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="valueFromOperator">
		<xs:restriction base="xs:string">
			<xs:enumeration value="greaterThan"/>
			<xs:enumeration value="greaterThanOrEqualTo"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="valueTo">
		<xs:complexContent>
			<xs:extension base="value">
				<xs:sequence>
					<xs:element name="operator" type="valueToOperator"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="valueToOperator">
		<xs:restriction base="xs:string">
			<xs:enumeration value="lessThan"/>
			<xs:enumeration value="lessThanOrEqualTo"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="valueRange">
		<xs:sequence>
			<xs:element name="valueFrom" type="valueFrom"/>
			<xs:element name="valueTo" type="valueTo"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="codeSet">
		<xs:sequence>
			<xs:element name="codingSystem" type="codingSystem"/>
			<xs:element name="codeSetValue" type="codeSetValue" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="codingSystem">
		<xs:restriction base="xs:string">
			<xs:enumeration value="EMISReadV2"/>
			<xs:enumeration value="DMD"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="codeSetValue">
		<xs:sequence>
			<xs:element name="code" type="xs:string"/>
			<xs:element name="includeChildren" type="xs:boolean"/>
			<xs:element name="exclusion" type="codeSetValue" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="restriction">
		<xs:sequence>
			<xs:element name="fieldName" type="xs:string"/>
			<xs:element name="orderDirection" type="orderDirection"/>
			<xs:element name="count" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="orderDirection">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ascending"/>
			<xs:enumeration value="descending"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="comparison">
		<xs:choice>
			<xs:element name="valueFrom" type="valueFrom"/>
			<xs:element name="valueTo" type="valueTo"/>
			<xs:element name="valueRange" type="valueRange"/>
			<xs:element name="valueEqualTo" type="value"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="test">
		<xs:sequence>
			<xs:choice>
				<xs:element name="dataSource" type="dataSource"/>
				<xs:element name="dataSourceUuid" type="xs:string"/>
			</xs:choice>
			<xs:choice>
				<xs:element name="isAny">
					<xs:complexType/>
				</xs:element>
				<xs:element name="fieldTest" type="fieldTest" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="dataSource">
		<xs:sequence>
			<xs:choice>
				<xs:element name="entity" type="xs:string"/>
				<xs:element name="dataSourceUuid" type="xs:string" maxOccurs="unbounded"/>
				<xs:element name="calculation" type="calculationType"/>
			</xs:choice>
			<xs:element name="filter" type="fieldTest" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="restriction" type="restriction" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="linkedTestType">
		<xs:sequence>
			<xs:element name="node1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="id"/>
						<xs:element name="fieldName" type="xs:string"/>
						<xs:element name="orderDirection" type="orderDirection"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="node2">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="id"/>
						<xs:element name="fieldName" type="xs:string"/>
						<xs:element name="orderDirection" type="orderDirection"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="parentField" type="xs:string"/>
			<xs:element name="childField" type="xs:string"/>
			<xs:element name="comparison" type="comparison"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parameterType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="global" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="calculationType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="parameter" type="calculationParameter" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="calculationParameter">
		<xs:sequence>
			<xs:element name="parameterName" type="xs:string"/>
			<xs:element name="dataSourceUuid" type="xs:string"/>
			<xs:element name="fieldName" type="xs:string" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="layoutType">
		<xs:sequence>
			<xs:element name="x" type="xs:int"/>
			<xs:element name="y" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="listReport">
		<xs:sequence>
			<xs:element name="group" type="listReportGroup" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="listReportGroup">
		<xs:sequence>
			<xs:element name="heading" type="xs:string" minOccurs="0"/>
			<xs:choice>
				<xs:element name="summary" type="listReportSummaryType"/>
				<xs:element name="fieldBased" type="listReportFieldBasedType"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="listReportSummaryType">
		<xs:sequence>
			<xs:element name="summaryType" type="summaryType"/>
			<xs:choice>
				<xs:element name="dataSourceUuid" type="xs:string"/>
				<xs:element name="testUuid" type="xs:string"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="summaryType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="any"/>
			<xs:enumeration value="count"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="listReportFieldBasedType">
		<xs:sequence>
			<xs:element name="dataSourceUuid" type="xs:string"/>
			<xs:element name="fieldOutput" type="fieldOutput" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fieldOutput">
		<xs:sequence>
			<xs:element name="field" type="xs:string"/>
			<xs:element name="heading" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="expressionType">
		<xs:sequence>
			<xs:element name="expressionText" type="xs:string"/>
			<xs:element name="variable" type="variableType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="variableType">
		<xs:sequence>
			<xs:element name="variableName" type="xs:string"/>
			<xs:element name="ruleId" type="xs:int"/>
			<xs:element name="restriction" type="restriction" minOccurs="0"/>
			<xs:element name="fieldName" type="xs:string"/>
			<xs:element name="function" type="variableFunction" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="variableFunction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="count"/>
			<xs:enumeration value="average"/>
			<xs:enumeration value="minimum"/>
			<xs:enumeration value="maximum"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
